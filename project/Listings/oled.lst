C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: E:\Embedded System\51\Keil5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          //OLED的显存
   4          //存放格式如下.
   5          //[0]0 1 2 3 ... 127  
   6          //[1]0 1 2 3 ... 127  
   7          //[2]0 1 2 3 ... 127  
   8          //[3]0 1 2 3 ... 127  
   9          //[4]0 1 2 3 ... 127  
  10          //[5]0 1 2 3 ... 127  
  11          //[6]0 1 2 3 ... 127  
  12          //[7]0 1 2 3 ... 127         
  13          //void delay_ms(unsigned int ms)
  14          //{                         
  15          //  unsigned int a;
  16          //  while(ms)
  17          //  {
  18          //    a=1800;
  19          //    while(a--);
  20          //    ms--;
  21          //  }
  22          //  return;
  23          //}
  24          /**********************************************
  25          //IIC Start
  26          **********************************************/
  27          void IIC_Start()
  28          {
  29   1      
  30   1        OLED_SCLK_Set() ;
  31   1        OLED_SDIN_Set();
  32   1        OLED_SDIN_Clr();
  33   1        OLED_SCLK_Clr();
  34   1      }
  35          
  36          /**********************************************
  37          //IIC Stop
  38          **********************************************/
  39          void IIC_Stop()
  40          {
  41   1      OLED_SCLK_Set() ;
  42   1      //  OLED_SCLK_Clr();
  43   1        OLED_SDIN_Clr();
  44   1        OLED_SDIN_Set();
  45   1        
  46   1      }
  47          
  48          void IIC_Wait_Ack()
  49          {
  50   1      
  51   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  52   1        //GPIOB->CRH |= 0x00080000;
  53   1      //  OLED_SDA = 1;
  54   1      //  delay_us(1);
C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 2   

  55   1        //OLED_SCL = 1;
  56   1        //delay_us(50000);
  57   1      /*  while(1)
  58   1        {
  59   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  60   1          {
  61   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  62   1            //GPIOB->CRH |= 0x00030000;
  63   1            return;
  64   1          }
  65   1        }
  66   1      */
  67   1        OLED_SCLK_Set() ;
  68   1        OLED_SCLK_Clr();
  69   1      }
  70          /**********************************************
  71          // IIC Write byte
  72          **********************************************/
  73          
  74          void Write_IIC_Byte(unsigned char IIC_Byte)
  75          {
  76   1        unsigned char i;
  77   1        unsigned char m,da;
  78   1        da=IIC_Byte;
  79   1        OLED_SCLK_Clr();
  80   1        for(i=0;i<8;i++)    
  81   1        {
  82   2            m=da;
  83   2          //  OLED_SCLK_Clr();
  84   2          m=m&0x80;
  85   2          if(m==0x80)
  86   2          {OLED_SDIN_Set();}
  87   2          else OLED_SDIN_Clr();
  88   2            da=da<<1;
  89   2          OLED_SCLK_Set();
  90   2          OLED_SCLK_Clr();
  91   2          }
  92   1      
  93   1      
  94   1      }
  95          /**********************************************
  96          // IIC Write Command
  97          **********************************************/
  98          void Write_IIC_Command(unsigned char IIC_Command)
  99          {
 100   1         IIC_Start();
 101   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 102   1        IIC_Wait_Ack(); 
 103   1         Write_IIC_Byte(0x00);      //write command
 104   1        IIC_Wait_Ack(); 
 105   1         Write_IIC_Byte(IIC_Command); 
 106   1        IIC_Wait_Ack(); 
 107   1         IIC_Stop();
 108   1      }
 109          /**********************************************
 110          // IIC Write Data
 111          **********************************************/
 112          void Write_IIC_Data(unsigned char IIC_Data)
 113          {
 114   1         IIC_Start();
 115   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 116   1        IIC_Wait_Ack(); 
C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 3   

 117   1         Write_IIC_Byte(0x40);      //write data
 118   1        IIC_Wait_Ack(); 
 119   1         Write_IIC_Byte(IIC_Data);
 120   1        IIC_Wait_Ack(); 
 121   1         IIC_Stop();
 122   1      }
 123          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 124          {
 125   1        if(cmd)
 126   1            {
 127   2      
 128   2         Write_IIC_Data(dat);
 129   2         
 130   2          }
 131   1        else {
 132   2         Write_IIC_Command(dat);
 133   2          
 134   2        }
 135   1      
 136   1      
 137   1      }
 138          
 139          /********************************************
 140          // fill_Picture
 141          ********************************************/
 142          //void fill_picture(unsigned char fill_Data)
 143          //{
 144          //  unsigned char m,n;
 145          //  for(m=0;m<8;m++)
 146          //  {
 147          //    OLED_WR_Byte(0xb0+m,0);   //page0-page1
 148          //    OLED_WR_Byte(0x00,0);   //low column start address
 149          //    OLED_WR_Byte(0x10,0);   //high column start address
 150          //    for(n=0;n<128;n++)
 151          //      {
 152          //        OLED_WR_Byte(fill_Data,1);
 153          //      }
 154          //  }
 155          //}
 156          
 157          
 158          /***********************Delay****************************************/
 159          //void Delay_50ms(unsigned int Del_50ms)
 160          //{
 161          //  unsigned int m;
 162          //  for(;Del_50ms>0;Del_50ms--)
 163          //    for(m=6245;m>0;m--);
 164          //}
 165          
 166          //void Delay_1ms(unsigned int Del_1ms)
 167          //{
 168          //  unsigned char j;
 169          //  while(Del_1ms--)
 170          //  { 
 171          //    for(j=0;j<123;j++);
 172          //  }
 173          //}
 174          
 175          //坐标设置
 176          
 177            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 178          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 4   

 179   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 180   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 181   1      }       
 182          //开启OLED显示    
 183          //void OLED_Display_On(void)
 184          //{
 185          //  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 186          //  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 187          //  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 188          //}
 189          //关闭OLED显示     
 190          //void OLED_Display_Off(void)
 191          //{
 192          //  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 193          //  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 194          //  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 195          //}            
 196          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 197          void OLED_Clear(void)  
 198          {  
 199   1        u8 i,n;       
 200   1        for(i=0;i<8;i++)  
 201   1        {  
 202   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 203   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 204   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 205   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 206   2        } //更新显示
 207   1      }
 208          //void OLED_On(void)  
 209          //{  
 210          //  u8 i,n;       
 211          //  for(i=0;i<8;i++)  
 212          //  {  
 213          //    OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 214          //    OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 215          //    OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 216          //    for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 217          //  } //更新显示
 218          //}
 219          //在指定位置显示一个字符,包括部分字符
 220          //x:0~127
 221          //y:0~63
 222          //mode:0,反白显示;1,正常显示         
 223          //size:选择字体 16/12 
 224          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 225          {       
 226   1        unsigned char c=0,i=0,d=0;  
 227   1          c=chr-' ';//得到偏移后的值      
 228   1          d = chr - '0';
 229   1      //    if(x>Max_Column-1){x=0;y=y+2;}
 230   1          if(Char_Size ==16)
 231   1            {
 232   2            OLED_Set_Pos(x,y);  
 233   2            for(i=0;i<8;i++)
 234   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 235   2            OLED_Set_Pos(x,y+1);
 236   2            for(i=0;i<8;i++)
 237   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 238   2            }
 239   1      //      else {  
 240   1      //        OLED_Set_Pos(x,y);
C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 5   

 241   1      //        for(i=0;i<6;i++)
 242   1      //        OLED_WR_Byte(F6x8[d][i],OLED_DATA);
 243   1      //        
 244   1      //      }
 245   1      }
 246          //m^n函数
 247          //u32 oled_pow(u8 m,u8 n)
 248          //{
 249          //  u32 result=1;  
 250          //  while(n--)result*=m;    
 251          //  return result;
 252          //}         
 253          //显示2个数字
 254          //x,y :起点坐标  
 255          //len :数字的位数
 256          //size:字体大小
 257          //mode:模式 0,填充模式;1,叠加模式
 258          //num:数值(0~4294967295);       
 259          //void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 260          //{           
 261          //  u8 t,temp;
 262          //  u8 enshow=0;               
 263          //  for(t=0;t<len;t++)
 264          //  {
 265          //    temp=(num/oled_pow(10,len-t-1))%10;
 266          //    if(enshow==0&&t<(len-1))
 267          //    {
 268          //      if(temp==0)
 269          //      {
 270          //        OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 271          //        continue;
 272          //      }else enshow=1; 
 273          //       
 274          //    }
 275          //    OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 276          //  }
 277          //} 
 278          //显示一个字符号串
 279          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 280          {
 281   1        unsigned char j=0;
 282   1        while (chr[j]!='\0')
 283   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 284   2            x+=8;
 285   2          if(x>120){x=0;y+=2;}
 286   2            j++;
 287   2        }
 288   1      }
 289          //显示汉字
 290          //void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 291          //{               
 292          //  u8 t,adder=0;
 293          //  OLED_Set_Pos(x,y);  
 294          //    for(t=0;t<16;t++)
 295          //    {
 296          //        OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 297          //        adder+=1;
 298          //     }  
 299          //    OLED_Set_Pos(x,y+1);  
 300          //    for(t=0;t<16;t++)
 301          //      { 
 302          //        OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 6   

 303          //        adder+=1;
 304          //      }         
 305          //}
 306          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -* x1,y1是结束点*/
 307          //void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BM
             -P[])
 308          //{   
 309          // unsigned int j=0;
 310          // unsigned char x,y;
 311          //  
 312          //  if(y1%8==0) y=y1/8;      
 313          //  else y=y1/8+1;
 314          //  for(y=y0;y<y1;y++)
 315          //  {
 316          //    OLED_Set_Pos(x0,y);
 317          //    for(x=x0;x<x1;x++)
 318          //      {      
 319          //        OLED_WR_Byte(BMP[j++],OLED_DATA);       
 320          //      }
 321          //  }
 322          //} 
 323          
 324          //初始化SSD1306             
 325          void OLED_Init(void)
 326          {   
 327   1       
 328   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 329   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 330   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 331   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 332   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 333   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 334   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 335   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 336   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 337   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 338   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 339   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 340   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 341   1        OLED_WR_Byte(0x00,OLED_CMD);//
 342   1        
 343   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 344   1        OLED_WR_Byte(0x80,OLED_CMD);//
 345   1        
 346   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 347   1        OLED_WR_Byte(0x05,OLED_CMD);//
 348   1        
 349   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 350   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 351   1        
 352   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 353   1        OLED_WR_Byte(0x12,OLED_CMD);//
 354   1        
 355   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 356   1        OLED_WR_Byte(0x30,OLED_CMD);//
 357   1        
 358   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 359   1        OLED_WR_Byte(0x14,OLED_CMD);//
 360   1        
 361   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 362   1      }  
C51 COMPILER V9.54   OLED                                                                  04/03/2023 19:08:33 PAGE 7   

 363          
 364          
 365          
 366          
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          
 377          
 378          
 379          
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    624    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
